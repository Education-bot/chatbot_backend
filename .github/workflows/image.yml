name: Build Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/education-bot:${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Gradle Wrapper
        run: ./gradlew build

#      - name: Log in to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}

#      - name: Build and push Docker image
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          push: true
#          tags: ${{ env.IMAGE_NAME }}

      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          CR_REGISTRY: crprsopobhp5th379noj
          CR_REPOSITORY: education-bot
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG .
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG

      - name: Deploy to yCloud
        id: deploy-coi
        uses: yc-actions/yc-coi-deploy@v2
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          vm-name: ${{ secrets.YC_VM_NAME }}
          vm-service-account-id: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
          vm-cores: 2
          vm-memory: 2Gb
          vm-core-fraction: 100
          vm-subnet-id: ${{ secrets.YC_SUBNET_ID}}
          user-data-path: './user-data.yaml'
          docker-compose-path: './compose.yaml'
