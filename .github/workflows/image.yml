name: Build Docker Image

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      #      - name: Checkout repository
      #        uses: actions/checkout@v4
      #
      #      - name: Set up JDK 21
      #        uses: actions/setup-java@v4
      #        with:
      #          java-version: '21'
      #          distribution: 'temurin'
      #
      #      - name: Build with Gradle Wrapper
      #        run: ./gradlew build

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: build-artifacts/

      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          CR_REGISTRY: crprsopobhp5th379noj
          CR_REPOSITORY: education-bot
          IMAGE_TAG: ${{ github.sha }}
        run: |
          COPY ./build-artifacts/education-bot.jar ./app.jar
          docker build -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG .
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG
      - name: Deploy to yCloud
        id: deploy-coi
        uses: yc-actions/yc-coi-deploy@v2
        env:
          CR_REGISTRY: crprsopobhp5th379noj
          CR_REPOSITORY: education-bot
          IMAGE_TAG: ${{ github.sha }}
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          vm-name: ${{ secrets.YC_VM_NAME }}
          vm-service-account-id: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
          vm-cores: 2
          vm-memory: 2Gb
          vm-core-fraction: 100
          vm-subnet-id: ${{ secrets.YC_SUBNET_ID}}
          user-data-path: './user-data.yaml'
          docker-compose-path: './docker-compose.yaml-prod.yaml'